GPU Prolog Script v1.14
This is a GPU node.
Enough GPUs available.
Allocating card 0
dj jul  3 14:34:40 BST 2025
Thu Jul  3 14:34:40 2025       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 550.54.15              Driver Version: 550.54.15      CUDA Version: 12.4     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA A40                     On  |   00000000:12:00.0 Off |                    0 |
|  0%   28C    P8             21W /  300W |       0MiB /  46068MiB |      0%   E. Process |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
|   1  NVIDIA A40                     On  |   00000000:13:00.0 Off |                    0 |
|  0%   26C    P8             21W /  300W |       0MiB /  46068MiB |      0%   E. Process |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
|   2  NVIDIA A40                     On  |   00000000:C1:00.0 Off |                    0 |
|  0%   27C    P8             21W /  300W |       0MiB /  46068MiB |      0%   E. Process |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
|   3  NVIDIA A40                     On  |   00000000:C2:00.0 Off |                    0 |
|  0%   28C    P8             21W /  300W |       0MiB /  46068MiB |      0%   E. Process |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
Parameters:
- img_size: 64
- train_bs: 16
- test_bs: 1
- drop_first: 0.1
- drop_last: 0.5
- use_T2W: True
- use_histo: False
- n_epochs: 50
- lr: 1e-06
- factor: 0.5
- patience: 4
- cooldown: 2
- λ_pixel: 10.0
- λ_perct: 0.01
- λ_ssim: 1.0
- λ_contrast: 1.0
- load_checkpoint: None
- img_folder: PICAI
- is_pretrain: True
- surgical_only: False


Creating model...
Creating datasets...
Starting training...

Epoch  0
Learning rate : 1e-06
Traceback (most recent call last):
  File "/cluster/project7/ProsRegNet_CellCount/UNet_SR/finetune_contrastive.py", line 103, in <module>
    train_evaluate(model, train_dataloader, test_dataloader, optimizer, scheduler, args.n_epochs, checkpoint, losses, λ_loss)
  File "/cluster/project7/ProsRegNet_CellCount/UNet_SR/model/training_functions.py", line 102, in train_evaluate
    train_total, train_all = train(model, optimizer, train_dataloader, losses, λ_loss)
  File "/cluster/project7/ProsRegNet_CellCount/UNet_SR/model/training_functions.py", line 27, in train
    for data in dataloader:
  File "/cluster/project7/ProsRegNet_CellCount/CriDiff/CriDiff_env/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 630, in __next__
    data = self._next_data()
  File "/cluster/project7/ProsRegNet_CellCount/CriDiff/CriDiff_env/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 1345, in _next_data
    return self._process_data(data)
  File "/cluster/project7/ProsRegNet_CellCount/CriDiff/CriDiff_env/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 1371, in _process_data
    data.reraise()
  File "/cluster/project7/ProsRegNet_CellCount/CriDiff/CriDiff_env/lib/python3.9/site-packages/torch/_utils.py", line 694, in reraise
    raise exception
TypeError: Caught TypeError in DataLoader worker process 0.
Original Traceback (most recent call last):
  File "/cluster/project7/ProsRegNet_CellCount/CriDiff/CriDiff_env/lib/python3.9/site-packages/torch/utils/data/_utils/collate.py", line 127, in collate
    return elem_type({key: collate([d[key] for d in batch], collate_fn_map=collate_fn_map) for key in elem})
  File "/cluster/project7/ProsRegNet_CellCount/CriDiff/CriDiff_env/lib/python3.9/site-packages/torch/utils/data/_utils/collate.py", line 127, in <dictcomp>
    return elem_type({key: collate([d[key] for d in batch], collate_fn_map=collate_fn_map) for key in elem})
  File "/cluster/project7/ProsRegNet_CellCount/CriDiff/CriDiff_env/lib/python3.9/site-packages/torch/utils/data/_utils/collate.py", line 150, in collate
    raise TypeError(default_collate_err_msg_format.format(elem_type))
TypeError: default_collate: batch must contain tensors, numpy arrays, numbers, dicts or lists; found <class 'NoneType'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cluster/project7/ProsRegNet_CellCount/CriDiff/CriDiff_env/lib/python3.9/site-packages/torch/utils/data/_utils/worker.py", line 308, in _worker_loop
    data = fetcher.fetch(index)
  File "/cluster/project7/ProsRegNet_CellCount/CriDiff/CriDiff_env/lib/python3.9/site-packages/torch/utils/data/_utils/fetch.py", line 54, in fetch
    return self.collate_fn(data)
  File "/cluster/project7/ProsRegNet_CellCount/CriDiff/CriDiff_env/lib/python3.9/site-packages/torch/utils/data/_utils/collate.py", line 265, in default_collate
    return collate(batch, collate_fn_map=default_collate_fn_map)
  File "/cluster/project7/ProsRegNet_CellCount/CriDiff/CriDiff_env/lib/python3.9/site-packages/torch/utils/data/_utils/collate.py", line 130, in collate
    return {key: collate([d[key] for d in batch], collate_fn_map=collate_fn_map) for key in elem}
  File "/cluster/project7/ProsRegNet_CellCount/CriDiff/CriDiff_env/lib/python3.9/site-packages/torch/utils/data/_utils/collate.py", line 130, in <dictcomp>
    return {key: collate([d[key] for d in batch], collate_fn_map=collate_fn_map) for key in elem}
  File "/cluster/project7/ProsRegNet_CellCount/CriDiff/CriDiff_env/lib/python3.9/site-packages/torch/utils/data/_utils/collate.py", line 150, in collate
    raise TypeError(default_collate_err_msg_format.format(elem_type))
TypeError: default_collate: batch must contain tensors, numpy arrays, numbers, dicts or lists; found <class 'NoneType'>

dj jul  3 14:36:17 BST 2025
GPU Epilog Script v0.30
